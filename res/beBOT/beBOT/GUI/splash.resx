<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wA=
</value>
  </data>
</root>